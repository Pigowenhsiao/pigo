1
00:00:00,000 --> 00:00:02,880
今天我們要來聊一篇論文

2
00:00:02,880 --> 00:00:05,040
聽起來好像有點無聊

3
00:00:05,040 --> 00:00:07,280
是關於文件掃描的

4
00:00:07,280 --> 00:00:08,380
但你先別轉台

5
00:00:08,380 --> 00:00:09,040
我跟你說

6
00:00:09,040 --> 00:00:11,480
如果你只看到文件掃描這幾個字

7
00:00:11,480 --> 00:00:13,480
那你可就錯過重點了

8
00:00:13,480 --> 00:00:14,380
因為這篇論文

9
00:00:14,380 --> 00:00:17,180
它其實是在挑戰一個AI領域裡面

10
00:00:17,180 --> 00:00:18,780
可以說是最口痛

11
00:00:18,780 --> 00:00:21,220
最根本的大問題

12
00:00:21,220 --> 00:00:21,720
來

13
00:00:21,720 --> 00:00:23,360
我們來想像一個場景

14
00:00:23,360 --> 00:00:24,720
如果今天一個AI

15
00:00:24,720 --> 00:00:28,200
它不用一個字一個字的去讀一份文件

16
00:00:28,200 --> 00:00:28,800
而是

17
00:00:28,800 --> 00:00:29,400
你知道嗎

18
00:00:29,400 --> 00:00:32,100
它只要看一眼這份文件的照片

19
00:00:32,100 --> 00:00:34,840
就能搞懂裡面所有的內容

20
00:00:34,840 --> 00:00:36,940
這聽起來是不是有點反直覺

21
00:00:36,940 --> 00:00:38,840
但這就是DeepSeek AI

22
00:00:38,840 --> 00:00:41,440
這個團隊提出來的超酷想法

23
00:00:41,440 --> 00:00:44,340
也是我們今天整個要聊的核心

24
00:00:44,340 --> 00:00:44,820
好

25
00:00:44,820 --> 00:00:45,840
那你可能會想

26
00:00:45,840 --> 00:00:47,280
為什麼要搞得這麼複雜

27
00:00:47,280 --> 00:00:48,280
用看的

28
00:00:48,280 --> 00:00:49,380
這背後的原因

29
00:00:49,380 --> 00:00:51,620
其實全都指向了AI

30
00:00:51,620 --> 00:00:52,760
一個很根本

31
00:00:52,760 --> 00:00:54,180
而且說真的

32
00:00:54,180 --> 00:00:55,660
很要命的問題

33
00:00:55,660 --> 00:00:56,560
那就是

34
00:00:56,580 --> 00:00:57,720
它的記憶力

35
00:00:57,720 --> 00:00:59,680
實在是太貴了

36
00:00:59,680 --> 00:01:01,660
大家有沒有想過一個問題

37
00:01:01,660 --> 00:01:04,060
就是為什麼我們不能很帥氣的

38
00:01:04,060 --> 00:01:05,460
直接把一整本書

39
00:01:05,460 --> 00:01:07,420
或者一整年的公司財報

40
00:01:07,420 --> 00:01:09,660
直接啪一聲丟給AI叫它

41
00:01:09,660 --> 00:01:10,260
喂

42
00:01:10,260 --> 00:01:12,540
幫我讀完做個總結

43
00:01:12,540 --> 00:01:14,100
聽起來很方便對不對

44
00:01:14,100 --> 00:01:15,600
但答案其實很簡單

45
00:01:15,600 --> 00:01:16,500
就是

46
00:01:16,500 --> 00:01:17,580
太貴了

47
00:01:17,580 --> 00:01:20,540
那個成本根本不是開玩笑的

48
00:01:20,540 --> 00:01:21,840
這個貴的背後

49
00:01:21,840 --> 00:01:24,280
藏著一個數學上的大魔王

50
00:01:24,280 --> 00:01:26,840
形話叫做二十方說放

51
00:01:26,840 --> 00:01:28,640
聽起來很嚇人對不對

52
00:01:28,640 --> 00:01:29,480
但別怕

53
00:01:29,480 --> 00:01:31,320
我把它講白話一點

54
00:01:31,320 --> 00:01:32,280
這意思就是

55
00:01:32,280 --> 00:01:34,180
你給AI的文章長度

56
00:01:34,180 --> 00:01:36,120
如果增加了10倍

57
00:01:36,120 --> 00:01:36,820
你猜猜看

58
00:01:36,820 --> 00:01:39,380
它的運算成本會增加幾倍

59
00:01:39,380 --> 00:01:40,420
不是10倍

60
00:01:40,420 --> 00:01:41,900
是10的平方

61
00:01:41,900 --> 00:01:43,700
也就是整整100倍

62
00:01:43,700 --> 00:01:45,120
你看有多誇張

63
00:01:45,120 --> 00:01:47,200
這也就是為什麼我們常常在講的

64
00:01:47,200 --> 00:01:49,360
AI的上下文視窗

65
00:01:49,360 --> 00:01:51,400
白話文就是它的短期記憶

66
00:01:51,400 --> 00:01:53,460
會這麼有限這麼寶貴

67
00:01:53,460 --> 00:01:56,000
所以為了解決這個燒錢的問題

68
00:01:56,000 --> 00:01:58,000
這些研究人員就想到一個

69
00:01:58,000 --> 00:02:00,500
哇真的是腦洞大開的方法

70
00:02:00,500 --> 00:02:01,480
他們想說

71
00:02:01,480 --> 00:02:04,940
與其讓AI去硬啃那些貴得要命的文字

72
00:02:04,940 --> 00:02:07,420
不如我們讓它去看圖好了

73
00:02:07,420 --> 00:02:08,420
這就是所謂的

74
00:02:08,420 --> 00:02:11,520
一張圖勝過千個Token的概念

75
00:02:11,520 --> 00:02:12,820
你看這一張圖

76
00:02:12,820 --> 00:02:14,120
就超清楚的

77
00:02:14,120 --> 00:02:15,700
在AI的世界裡

78
00:02:15,700 --> 00:02:16,860
他們處理資訊

79
00:02:16,860 --> 00:02:18,260
是用一種叫Token

80
00:02:18,260 --> 00:02:20,500
也就是另牌的東西當單位

81
00:02:20,500 --> 00:02:23,340
你可以把它想像成是AI在思考的時候

82
00:02:23,340 --> 00:02:25,040
用的樂高積木

83
00:02:25,040 --> 00:02:25,700
你看喔

84
00:02:25,700 --> 00:02:26,840
以前可能要用掉

85
00:02:26,840 --> 00:02:27,340
哇

86
00:02:27,340 --> 00:02:28,840
一千塊的文字樂高

87
00:02:28,840 --> 00:02:30,300
才能拼出來的資訊

88
00:02:30,300 --> 00:02:32,480
現在透過看圖這個方法

89
00:02:32,480 --> 00:02:33,580
把它壓縮一下

90
00:02:33,580 --> 00:02:35,980
可能只要一百塊的視覺樂高就搞定了

91
00:02:35,980 --> 00:02:37,980
是不是差很多

92
00:02:37,980 --> 00:02:38,380
對

93
00:02:38,380 --> 00:02:39,240
你沒看錯

94
00:02:39,240 --> 00:02:41,240
就是整整10倍

95
00:02:41,240 --> 00:02:43,780
這個壓縮率真的太驚人了

96
00:02:43,780 --> 00:02:44,920
這感覺就像是

97
00:02:44,920 --> 00:02:47,160
我們終於幫AI找到了一種

98
00:02:47,160 --> 00:02:48,720
它天生就看得懂的

99
00:02:48,720 --> 00:02:52,920
超級無敵高效的Zip壓縮檔格式

100
00:02:52,920 --> 00:02:53,560
而且喔

101
00:02:53,560 --> 00:02:55,000
你以為壓縮這麼多

102
00:02:55,000 --> 00:02:56,500
資訊會失真嗎

103
00:02:56,500 --> 00:02:57,360
錯了

104
00:02:57,360 --> 00:02:58,540
更扯的是

105
00:02:58,540 --> 00:03:00,400
就算壓縮了10倍

106
00:03:00,400 --> 00:03:02,900
它把內容還原回來的準確率

107
00:03:02,900 --> 00:03:05,300
居然還高達97%

108
00:03:05,300 --> 00:03:06,400
我的天啊

109
00:03:06,400 --> 00:03:07,380
這就證明了

110
00:03:07,380 --> 00:03:09,680
這個方法不只是隨便說說而已

111
00:03:09,680 --> 00:03:11,940
它是真的又有效又精準

112
00:03:11,940 --> 00:03:13,840
完全展現了用視覺

113
00:03:13,840 --> 00:03:17,380
來當作壓縮工具的潛力有多大

114
00:03:17,380 --> 00:03:17,720
好

115
00:03:17,720 --> 00:03:18,880
那問題來了

116
00:03:18,880 --> 00:03:20,180
這麼神奇的技術

117
00:03:20,180 --> 00:03:22,480
到底是怎麼做到的

118
00:03:22,480 --> 00:03:24,220
這背後的秘密武器

119
00:03:24,220 --> 00:03:25,220
就是一個叫做

120
00:03:25,220 --> 00:03:27,920
Deep Encoder的特殊架構

121
00:03:27,920 --> 00:03:29,060
你可以把它想像成

122
00:03:29,060 --> 00:03:31,160
像是一枚兩節式的火箭

123
00:03:31,160 --> 00:03:32,260
分工合作

124
00:03:32,260 --> 00:03:34,160
超級精準地完成了這個

125
00:03:34,160 --> 00:03:36,940
聽起來幾乎不可能的任務

126
00:03:36,940 --> 00:03:38,100
這時候你一定會吐槽

127
00:03:38,100 --> 00:03:38,680
對不對

128
00:03:38,680 --> 00:03:38,980
欸

129
00:03:38,980 --> 00:03:39,600
等一下

130
00:03:39,600 --> 00:03:41,000
高解析度的照片

131
00:03:41,000 --> 00:03:43,820
它自己的資料量不是也超大的嗎

132
00:03:43,820 --> 00:03:44,580
沒錯

133
00:03:44,580 --> 00:03:46,480
你完全問到重點了

134
00:03:46,480 --> 00:03:49,120
這就是整個事情最難的地方

135
00:03:49,120 --> 00:03:52,320
如果只是傻傻的把文件拍成照片

136
00:03:52,320 --> 00:03:54,260
那資料量反而會爆炸

137
00:03:54,260 --> 00:03:55,720
所以這個Deep Encoder

138
00:03:55,720 --> 00:03:57,660
這個聰明的AI之眼

139
00:03:57,660 --> 00:04:01,100
就是為了解決這個矛盾而設計出來的

140
00:04:01,100 --> 00:04:03,560
那這枚火箭是怎麼發射的呢

141
00:04:03,560 --> 00:04:05,740
來我們分三步看

142
00:04:05,740 --> 00:04:06,240
第一步

143
00:04:06,240 --> 00:04:08,300
火箭的第一節點火了

144
00:04:08,300 --> 00:04:09,940
它就像一個佈局保全

145
00:04:09,940 --> 00:04:11,740
用很省力的方式

146
00:04:11,740 --> 00:04:14,140
快速掃描一下整張圖

147
00:04:14,140 --> 00:04:15,540
它的任務很單純

148
00:04:15,540 --> 00:04:17,920
只要找出字在哪裡就好

149
00:04:17,920 --> 00:04:18,580
第二步

150
00:04:18,580 --> 00:04:19,740
接著一個超強的

151
00:04:19,740 --> 00:04:22,480
16倍壓縮器就上場了

152
00:04:22,480 --> 00:04:25,480
它會把剛剛找到的那些龐大的未知資訊

153
00:04:25,480 --> 00:04:27,720
從4096個Token

154
00:04:27,720 --> 00:04:31,060
刷一下壓縮到只剩下256個

155
00:04:31,060 --> 00:04:32,060
最後第三步

156
00:04:32,060 --> 00:04:33,720
輪到火箭的第二節了

157
00:04:33,720 --> 00:04:35,900
也就是知識學者要登場了

158
00:04:35,900 --> 00:04:39,800
它拿到的就是前面壓縮完的256個Token精華

159
00:04:39,800 --> 00:04:42,700
然後它才開始專心去深入理解

160
00:04:42,700 --> 00:04:45,240
這些字到底是什麼意思

161
00:04:45,240 --> 00:04:46,800
好講了這麼多理論

162
00:04:46,800 --> 00:04:48,040
大家可能覺得

163
00:04:48,040 --> 00:04:49,680
真的有這麼神嗎

164
00:04:49,680 --> 00:04:51,640
所以光說不定是沒用的

165
00:04:51,640 --> 00:04:53,440
我們直接來看數據

166
00:04:53,440 --> 00:04:57,240
看看這個技術在實戰中的表現到底怎麼樣

167
00:04:57,240 --> 00:04:59,720
證明它不只是一個很酷的點子

168
00:04:59,720 --> 00:05:02,320
而是真的超級實用

169
00:05:02,320 --> 00:05:03,560
哇你看這一張圖

170
00:05:03,560 --> 00:05:05,820
這個對比真的太誇張了

171
00:05:05,820 --> 00:05:06,660
你看左邊

172
00:05:06,660 --> 00:05:08,460
那個現在頂尖的模型之一

173
00:05:08,460 --> 00:05:10,220
Miner U2.0

174
00:05:10,220 --> 00:05:11,560
它處理一頁文件

175
00:05:11,560 --> 00:05:13,900
平均要用掉快7000的Token

176
00:05:13,900 --> 00:05:15,200
然後你再看右邊

177
00:05:15,200 --> 00:05:16,500
我們今天的主角

178
00:05:16,500 --> 00:05:17,840
DeepSeek OCR

179
00:05:17,840 --> 00:05:18,700
用了多少

180
00:05:18,700 --> 00:05:19,840
不到800個

181
00:05:19,840 --> 00:05:21,640
用不到1/8的資源

182
00:05:21,640 --> 00:05:23,580
就做到了更好的效果

183
00:05:23,580 --> 00:05:27,680
這就是最經典的花小錢辦大事啊

184
00:05:27,680 --> 00:05:29,380
這張表就更有趣了

185
00:05:29,380 --> 00:05:33,880
它讓我們看到了壓縮率跟精準度之間的一個取捨關係

186
00:05:33,880 --> 00:05:34,420
你看喔

187
00:05:34,420 --> 00:05:36,420
在10倍壓縮的時候

188
00:05:36,420 --> 00:05:40,300
精準度可以維持在超高的97%左右

189
00:05:40,300 --> 00:05:41,760
那如果我們再貪心一點

190
00:05:41,760 --> 00:05:44,460
把它拉到20倍的極限壓縮呢

191
00:05:44,460 --> 00:05:48,060
它也還能保有大概60%的準確度

192
00:05:48,060 --> 00:05:49,740
這就很清楚的告訴我們

193
00:05:49,740 --> 00:05:51,740
這項技術的極限在哪裡

194
00:05:51,740 --> 00:05:54,300
還有它的潛力有多大

195
00:05:54,300 --> 00:05:54,980
OK

196
00:05:54,980 --> 00:05:55,900
聽到這裡

197
00:05:55,900 --> 00:05:56,700
你可能會覺得

198
00:05:56,700 --> 00:05:57,480
喔

199
00:05:57,480 --> 00:06:00,840
所以這就是一個很厲害的文件辨識技術嗎

200
00:06:00,840 --> 00:06:02,380
如果你只想到這裡

201
00:06:02,380 --> 00:06:03,880
那就太小看它了

202
00:06:03,880 --> 00:06:04,740
我跟你說

203
00:06:04,740 --> 00:06:06,920
這項研究真正厲害的地方

204
00:06:06,920 --> 00:06:09,180
遠遠不只是掃描文件而已

205
00:06:09,180 --> 00:06:12,860
它其實是為AI的一個終極大塞文

206
00:06:12,860 --> 00:06:13,560
也就是

207
00:06:13,560 --> 00:06:14,920
長期記憶

208
00:06:14,920 --> 00:06:16,460
提供了一個全新的

209
00:06:16,460 --> 00:06:20,500
而且可以說是非常接近人類的解決方案

210
00:06:20,500 --> 00:06:22,900
你想想看我們人是怎麼記事情的

211
00:06:22,900 --> 00:06:24,100
很久以前的記憶

212
00:06:24,100 --> 00:06:25,840
是不是會越來越模糊

213
00:06:25,840 --> 00:06:28,940
我們的大腦會自動壓縮那些舊的記憶

214
00:06:28,940 --> 00:06:30,940
把空間留給新的東西

215
00:06:30,940 --> 00:06:32,340
但現在的AI呢

216
00:06:32,340 --> 00:06:35,020
它就像一個有潔癖的答案管理員

217
00:06:35,020 --> 00:06:37,380
不管是剛剛一秒鐘前發生的事

218
00:06:37,380 --> 00:06:38,980
還是一年前的舊事

219
00:06:38,980 --> 00:06:40,420
它都用一樣高清

220
00:06:40,420 --> 00:06:42,460
一樣昂貴的注意力去對待

221
00:06:42,460 --> 00:06:44,220
這樣做說真的既不自然

222
00:06:44,220 --> 00:06:46,220
也超級浪費資源

223
00:06:46,220 --> 00:06:49,800
所以這個想法就催生出一個超級聰明的機制

224
00:06:49,800 --> 00:06:51,360
也就是你現在看到的

225
00:06:51,360 --> 00:06:53,860
叫做光學遺忘機制

226
00:06:53,860 --> 00:06:55,060
這概念是這樣

227
00:06:55,060 --> 00:06:58,160
我們可以把AI過去所有的對話記錄

228
00:06:58,160 --> 00:07:01,000
都變成一張一張的圖片來存

229
00:07:01,000 --> 00:07:01,700
你看

230
00:07:01,700 --> 00:07:03,000
一小時前的對話

231
00:07:03,000 --> 00:07:03,580
OK

232
00:07:03,580 --> 00:07:05,440
是一張超高清的照片

233
00:07:05,440 --> 00:07:07,940
所有細節都清清楚楚

234
00:07:07,940 --> 00:07:09,420
一個禮拜前的對話呢

235
00:07:09,420 --> 00:07:11,820
就變成一張中等解析度的圖

236
00:07:11,820 --> 00:07:12,780
有點糊了

237
00:07:12,780 --> 00:07:14,420
但重點還在

238
00:07:14,420 --> 00:07:16,560
那如果是一年前的對話呢

239
00:07:16,560 --> 00:07:19,060
那就變成一張解析度超低的圖

240
00:07:19,060 --> 00:07:22,100
基本上只剩下一個大概的印象了

241
00:07:22,100 --> 00:07:23,500
這樣做的好處是什麼

242
00:07:23,500 --> 00:07:24,600
關鍵就在於

243
00:07:24,600 --> 00:07:26,100
它讓AI的記憶

244
00:07:26,100 --> 00:07:27,900
第一次變得有層次感

245
00:07:27,900 --> 00:07:29,640
而且超級有效率

246
00:07:29,640 --> 00:07:31,840
AI可以把最寶貴的運算資源

247
00:07:31,840 --> 00:07:33,840
都留給現在正在處理的事情

248
00:07:33,840 --> 00:07:35,780
而對於很久以前的記憶

249
00:07:35,780 --> 00:07:37,840
它只要花非常非常低的成本

250
00:07:37,840 --> 00:07:40,580
去描也演那張模糊的圖就夠了

251
00:07:40,580 --> 00:07:41,540
這就等於是

252
00:07:41,540 --> 00:07:44,220
為了拒絕那個無限長記憶的夢想

253
00:07:44,220 --> 00:07:46,820
找到了一條真正可行的路啊

254
00:07:46,820 --> 00:07:47,520
所以你看

255
00:07:47,520 --> 00:07:49,220
我們從一個看似很小的

256
00:07:49,220 --> 00:07:51,260
文件掃描技術開始

257
00:07:51,260 --> 00:07:52,320
一路聊下來

258
00:07:52,320 --> 00:07:53,960
最終其實是在問一個

259
00:07:53,960 --> 00:07:55,860
非常深刻的問題

260
00:07:55,860 --> 00:07:56,660
就是說

261
00:07:56,660 --> 00:07:59,060
透過這種讓AI學會看

262
00:07:59,060 --> 00:08:01,300
甚至學會遺忘的機制

263
00:08:01,300 --> 00:08:02,240
我們是不是

264
00:08:02,240 --> 00:08:04,700
正在一步一步的打造出一個

265
00:08:04,700 --> 00:08:07,300
終於能夠像我們人類一樣思考

266
00:08:07,300 --> 00:08:09,940
一樣擁有記憶的AI呢

267
00:08:09,940 --> 00:08:10,840
嗯

268
00:08:10,840 --> 00:08:11,820
這個問題

269
00:08:11,820 --> 00:08:14,220
真的值得我們大家好好想一想

270
00:08:14,220 --> 00:08:16,220
(字幕製作:貝爾)

